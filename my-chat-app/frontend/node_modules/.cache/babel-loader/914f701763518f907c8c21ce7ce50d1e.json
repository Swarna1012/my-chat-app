{"ast":null,"code":"var _jsxFileName = \"/home/divum/Desktop/Training/project/ChattingApp-master/frontend/src/Components/MainPage/MainPage.js\";\nimport React, { Component, useContext } from \"react\";\nimport './MainPage.css';\nimport Post from \"../Post/Post\";\n// import post from \"../../images/post1.jpg\";\nimport uploadImage from '../../images/upload1.png';\nimport { storage } from '../firebase';\nimport SignIn from \"../SignIn/SignIn\";\n// import {UserContext, useUser} from '../../context/UserContext';\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getPost = () => {\n      const thisContext = this;\n      // let data =[\n      //     {\n      //         \"postId\": \"123456\",\n      //         \"username\": \"swarna\",\n      //         \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n      //         \"timeStamp\": \"111111\",\n      //         \"likes\": \"7989\"\n      //     },\n      //     {\n      //         \"postId\": \"123456\",\n      //         \"username\": \"arun\",\n      //         \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n      //         \"timeStamp\": \"111111\",\n      //         \"likes\": \"7989\"\n      //     },\n      //     {\n      //         \"postId\": \"123456\",\n      //         \"username\": \"anu\",\n      //         \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n      //         \"timeStamp\": \"111111\",\n      //         \"likes\": \"7989\"\n      //     }\n      // ];\n      fetch(\"http://localhost:8080/post/\" + JSON.parse(localStorage.getItem(\"users\")).uid) //get post of following users\n      .then(response => response.json()).then(data => {\n        console.log(data);\n        thisContext.setState({\n          postArray: data\n        });\n      });\n    };\n    this.upload = event => {\n      let image = event.target.files[0];\n      const thisContext = this;\n      if (image == null || image == undefined) return;\n      var uploadTask = storage.ref(\"images\").child(image.name).put(image);\n      uploadTask.on(\"state_changed\", function (snapshot) {\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        thisContext.setState({\n          progressBar: progress\n        });\n      }, function (error) {}, function () {\n        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          console.log(downloadURL);\n          let payload = {\n            \"postId\": Math.floor(Math.random() * 100000).toString(),\n            \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n            \"path\": downloadURL,\n            \"postedAt\": new Date().getTime(),\n            \"likesCount\": 0\n          };\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          };\n          fetch(\"http://localhost:8080/post\", requestOptions).then(response => response.json()).then(data => {\n            console.log(data);\n            thisContext.getPost();\n            thisContext.getPost();\n            const signInInstance = new SignIn();\n            signInInstance.getUserDetails();\n            console.log(signInInstance.getUserDetails);\n          }).catch(error => {});\n        });\n      });\n    };\n    this.state = {\n      postArray: [],\n      progressBar: \"\"\n    };\n  }\n  componentDidMount() {\n    this.getPost();\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainpage_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, this.state.progressBar), this.state.postArray.map((item, index) => /*#__PURE__*/React.createElement(Post, {\n      id: item.postId,\n      username: item.username,\n      postImage: item.path,\n      likes: item.likesCount,\n      uid: item.userId,\n      alreadyLiked: item.alreadyLiked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    })));\n  }\n}\nexport default MainPage;","map":{"version":3,"names":["React","Component","useContext","Post","uploadImage","storage","SignIn","MainPage","constructor","props","getPost","thisContext","fetch","JSON","parse","localStorage","getItem","uid","then","response","json","data","console","log","setState","postArray","upload","event","image","target","files","undefined","uploadTask","ref","child","name","put","on","snapshot","progress","bytesTransferred","totalBytes","progressBar","error","getDownloadURL","downloadURL","payload","Math","floor","random","toString","Date","getTime","requestOptions","method","headers","body","stringify","signInInstance","getUserDetails","catch","state","componentDidMount","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","index","id","postId","username","postImage","path","likes","likesCount","userId","alreadyLiked"],"sources":["/home/divum/Desktop/Training/project/ChattingApp-master/frontend/src/Components/MainPage/MainPage.js"],"sourcesContent":["import React,{Component, useContext} from \"react\";\nimport './MainPage.css'\nimport Post from \"../Post/Post\";\n// import post from \"../../images/post1.jpg\";\nimport uploadImage from '../../images/upload1.png';\nimport {storage} from '../firebase';\nimport SignIn from \"../SignIn/SignIn\";\n// import {UserContext, useUser} from '../../context/UserContext';\n\nclass MainPage extends Component {\n\n    constructor(props) { \n        super(props);\n        this.state = {  \n            postArray:[],\n            progressBar:\"\",\n        }\n    }\n    \n    componentDidMount(){\n        this.getPost();\n    }\n\n    getPost=()=>{\n        const thisContext = this;\n        // let data =[\n        //     {\n        //         \"postId\": \"123456\",\n        //         \"username\": \"swarna\",\n        //         \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n        //         \"timeStamp\": \"111111\",\n        //         \"likes\": \"7989\"\n        //     },\n        //     {\n        //         \"postId\": \"123456\",\n        //         \"username\": \"arun\",\n        //         \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n        //         \"timeStamp\": \"111111\",\n        //         \"likes\": \"7989\"\n        //     },\n        //     {\n        //         \"postId\": \"123456\",\n        //         \"username\": \"anu\",\n        //         \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n        //         \"timeStamp\": \"111111\",\n        //         \"likes\": \"7989\"\n        //     }\n        // ];\n        fetch(\"http://localhost:8080/post/\" + JSON.parse(localStorage.getItem(\"users\")).uid)             //get post of following users\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                thisContext.setState({postArray: data});\n\n        });\n    }\n\n    upload = (event) =>{\n        let image = event.target.files[0];\n        const thisContext = this;\n        if(image == null || image == undefined)\n            return;\n        var uploadTask = storage.ref(\"images\").child(image.name).put(image);\n        uploadTask.on(\n            \"state_changed\",\n            function(snapshot){\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                thisContext.setState({progressBar : progress})\n            },\n            function(error){\n\n            },\n            function(){\n                uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL){\n                    console.log(downloadURL);\n                    \n                    let payload = {\n                        \"postId\": Math.floor(Math.random() * 100000).toString(),\n                        \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n                        \"path\": downloadURL,\n                        \"postedAt\": new Date().getTime(),\n                        \"likesCount\": 0\n                    };\n                    \n                    const requestOptions ={\n                        method: \"POST\",\n                        headers: { 'Content-Type': 'application/json' },\n                        body : JSON.stringify(payload),\n                    }\n        \n                    fetch(\"http://localhost:8080/post\",requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data);\n                        thisContext.getPost();\n                        thisContext.getPost();\n\n                        const signInInstance = new SignIn();\n                        signInInstance.getUserDetails();\n                        console.log(signInInstance.getUserDetails);\n                    })\n                    .catch(error =>{\n        \n                    })\n                })\n            });\n    }\n\n    render() { \n        return (  \n            <div>\n                <div className=\"mainpage_container\">\n                    {/* <div className=\"mainpage_divider\"></div> */}\n                    {/* <div className=\"fileupload\">\n                        <label for=\"file-upload\">\n                            <img className=\"mainpage_uploadicon\" src={uploadImage}></img>\n                        </label>\n                        <input onChange={this.upload} id=\"file-upload\" type=\"file\"/>\n                    </div> */}\n                    {/* <div className=\"mainpage_divider\"></div> */}\n                </div>\n                <div className=\"upload_text\">{this.state.progressBar}</div>\n                {\n                    this.state.postArray.map((item,index)=>(\n                        <Post id={item.postId} username={item.username} postImage={item.path} likes={item.likesCount} uid={item.userId}\n                            alreadyLiked={item.alreadyLiked} />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n \nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}