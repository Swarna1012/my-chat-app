{"ast":null,"code":"var _jsxFileName = \"/home/divum/Desktop/Training/project/ChattingApp-master/frontend/src/Components/MainPage/MainPage.js\";\nimport React, { Component } from \"react\";\nimport './MainPage.css';\nimport Post from \"../Post/Post\";\n// import post from \"../../images/post1.jpg\";\nimport uploadImage from '../../images/upload1.png';\nimport { storage } from '../firebase';\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getPost = () => {\n      let data = [{\n        \"postId\": \"123456\",\n        \"username\": \"swarna\",\n        \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n        \"timeStamp\": \"111111\",\n        \"likes\": \"7989\"\n      }, {\n        \"postId\": \"123456\",\n        \"username\": \"arun\",\n        \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n        \"timeStamp\": \"111111\",\n        \"likes\": \"7989\"\n      }, {\n        \"postId\": \"123456\",\n        \"username\": \"anu\",\n        \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n        \"timeStamp\": \"111111\",\n        \"likes\": \"7989\"\n      }];\n      this.setState({\n        postArray: data\n      });\n    };\n    this.upload = event => {\n      let image = event.target.files[0];\n      const thisContext = this;\n      if (image == null || image == undefined) return;\n      var uploadTask = storage.ref(\"images\").child(image.name).put(image);\n      uploadTask.on(\"state_changed\", function (snapshot) {\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        thisContext.setState({\n          progressBar: progress\n        });\n      }, function (error) {}, function () {\n        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          console.log(downloadURL);\n          let usersData = localStorage.getItem(\"users\");\n          let userId = usersData ? JSON.parse(usersData).uid : null;\n          let payload = {\n            \"postId\": Math.floor(Math.random() * 100000).toString(),\n            \"userId\": userId,\n            \"path\": downloadURL,\n            \"postedAt\": new Date().getTime(),\n            \"likesCount\": 0\n          };\n\n          // let payload = {\n          //     \"postId\": Math.floor(Math.random()*100000).toString(),\n          //     \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n          //     \"path\": downloadURL,\n          //     \"postedAt\": new Date().getTime(),\n          //     \"likesCount\": 0\n          // }\n\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          };\n          fetch(\"http://localhost:8080/post\", requestOptions).then(response => response.json()).then(data => {\n            console.log(data);\n          }).catch(error => {});\n        });\n      });\n    };\n    this.state = {\n      postArray: [],\n      progressBar: \"\"\n    };\n  }\n  componentDidMount() {\n    this.getPost();\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainpage_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainpage_divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fileupload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"file-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mainpage_uploadicon\",\n      src: uploadImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.upload,\n      id: \"file-upload\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainpage_divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, this.state.progressBar), this.state.postArray.map((item, index) => /*#__PURE__*/React.createElement(Post, {\n      id: item.postId,\n      username: item.username,\n      postImage: item.postImageURL,\n      likes: item.likes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    })));\n  }\n}\nexport default MainPage;","map":{"version":3,"names":["React","Component","Post","uploadImage","storage","MainPage","constructor","props","getPost","data","setState","postArray","upload","event","image","target","files","thisContext","undefined","uploadTask","ref","child","name","put","on","snapshot","progress","bytesTransferred","totalBytes","progressBar","error","getDownloadURL","then","downloadURL","console","log","usersData","localStorage","getItem","userId","JSON","parse","uid","payload","Math","floor","random","toString","Date","getTime","requestOptions","method","headers","body","stringify","fetch","response","json","catch","state","componentDidMount","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","for","src","onChange","id","type","map","item","index","postId","username","postImage","postImageURL","likes"],"sources":["/home/divum/Desktop/Training/project/ChattingApp-master/frontend/src/Components/MainPage/MainPage.js"],"sourcesContent":["import React,{Component} from \"react\";\nimport './MainPage.css'\nimport Post from \"../Post/Post\";\n// import post from \"../../images/post1.jpg\";\nimport uploadImage from '../../images/upload1.png';\nimport {storage} from '../firebase';\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            postArray:[],\n            progressBar:\"\",\n        }\n    }\n    \n    componentDidMount(){\n        this.getPost();\n    }\n    getPost=()=>{\n        let data =[\n            {\n                \"postId\": \"123456\",\n                \"username\": \"swarna\",\n                \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n                \"timeStamp\": \"111111\",\n                \"likes\": \"7989\"\n            },\n            {\n                \"postId\": \"123456\",\n                \"username\": \"arun\",\n                \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n                \"timeStamp\": \"111111\",\n                \"likes\": \"7989\"\n            },\n            {\n                \"postId\": \"123456\",\n                \"username\": \"anu\",\n                \"postImageURL\": \"https://w0.peakpx.com/wallpaper/917/343/HD-wallpaper-nature-night.jpg\",\n                \"timeStamp\": \"111111\",\n                \"likes\": \"7989\"\n            }\n        ];\n        this.setState({postArray: data});\n    }\n\n    upload = (event) =>{\n        let image = event.target.files[0];\n        const thisContext = this;\n        if(image == null || image == undefined)\n            return;\n        var uploadTask = storage.ref(\"images\").child(image.name).put(image);\n        uploadTask.on(\n            \"state_changed\",\n            function(snapshot){\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                thisContext.setState({progressBar : progress})\n            },\n            function(error){\n\n            },\n            function(){\n                uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL){\n                    console.log(downloadURL);\n                    \n                    let usersData = localStorage.getItem(\"users\");\n                    let userId = usersData ? JSON.parse(usersData).uid : null;\n\n                    let payload = {\n                        \"postId\": Math.floor(Math.random() * 100000).toString(),\n                        \"userId\": userId,\n                        \"path\": downloadURL,\n                        \"postedAt\": new Date().getTime(),\n                        \"likesCount\": 0\n                    };\n                    \n                    // let payload = {\n                    //     \"postId\": Math.floor(Math.random()*100000).toString(),\n                    //     \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n                    //     \"path\": downloadURL,\n                    //     \"postedAt\": new Date().getTime(),\n                    //     \"likesCount\": 0\n                    // }\n                \n                    const requestOptions ={\n                        method: \"POST\",\n                        headers: { 'Content-Type': 'application/json' },\n                        body : JSON.stringify(payload),\n                    }\n        \n                    fetch(\"http://localhost:8080/post\",requestOptions)\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data);\n                    })\n                    .catch(error =>{\n        \n                    })\n                })\n            });\n    }\n\n    render() { \n        return (  \n            <div>\n                <div className=\"mainpage_container\">\n                    <div className=\"mainpage_divider\"></div>\n                    <div className=\"fileupload\">\n                        <label for=\"file-upload\">\n                            <img className=\"mainpage_uploadicon\" src={uploadImage}></img>\n                        </label>\n                        <input onChange={this.upload} id=\"file-upload\" type=\"file\"/>\n                    </div>\n                    <div className=\"mainpage_divider\"></div>\n                </div>\n                <div className=\"upload_text\">{this.state.progressBar}</div>\n                {\n                    this.state.postArray.map((item,index)=>(\n                        <Post id={item.postId} username={item.username} postImage={item.postImageURL} likes={item.likes} />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n \nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}