{"ast":null,"code":"var _jsxFileName = \"/home/divum/Desktop/Training/project/ChattingApp-master/frontend/src/Components/Post/Post.js\";\nimport React, { Component } from \"react\";\nimport './Post.css';\nimport { Avatar } from \"@mui/material\";\n// import postImage from \"../../images/post2.jpg\";\nimport love from \"../../images/love.png\";\nimport comments from \"../../images/comments.png\";\nimport send from \"../../images/send.png\";\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.getComments = () => {\n      let data = [{\n        \"username\": \"aravind\",\n        \"commentId\": \"1234\",\n        \"timeStamp\": \"123456\",\n        \"description\": \"Comment 1\"\n      }, {\n        \"username\": \"keeru\",\n        \"commentId\": \"1234\",\n        \"timeStamp\": \"123456\",\n        \"description\": \"Comment 2\"\n      }, {\n        \"username\": \"arun\",\n        \"commentId\": \"1234\",\n        \"timeStamp\": \"123456\",\n        \"description\": \"Comment 3\"\n      }];\n      this.setState({\n        commentList: data\n      });\n      // fetch(\"http://localhost:8080/comments/{id}\")\n      //     .then(response => response.json())\n      //     .then(data => {\n      //         this.setState({commentList: data});\n      //     });\n    };\n    this.submitCommits = event => {\n      if (event.key == \"Enter\") {\n        let comment = event.currentTarget.value;\n        if (comment != null || comment != undefined) {\n          const thisContext = this;\n          let payload = {\n            \"commentId\": Math.floor(Math.random() * 100000).toString(),\n            \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n            \"postId\": this.props.id,\n            \"comment\": comment,\n            \"commentedAt\": new Date().getTime()\n          };\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          };\n          fetch(\"http://localhost:8080/comments\", requestOptions).then(response => response.json()).then(data => {\n            console.log(data);\n            // thisContext.getPost();\n          }).catch(error => {});\n        }\n      }\n    };\n    this.state = {\n      commentList: []\n    };\n  }\n  componentDidMount() {\n    this.getComments();\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: \"post_image\",\n      src: this.props.profileImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post_username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, this.props.username)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.postImage,\n      width: \"615px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: love,\n      className: \"post_reactImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: comments,\n      className: \"post_reactImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: send,\n      className: \"post_reactImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        marginLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, this.props.likes, \" likes\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, this.state.commentList.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post_comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, item.username, \": \", item.description)), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"post_commentBox\",\n      onKeyPress: this.submitCommits,\n      type: \"text\",\n      placeholder: \"Add a comment...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })));\n  }\n}\nexport default Post;","map":{"version":3,"names":["React","Component","Avatar","love","comments","send","Post","constructor","props","getComments","data","setState","commentList","submitCommits","event","key","comment","currentTarget","value","undefined","thisContext","payload","Math","floor","random","toString","JSON","parse","localStorage","getItem","uid","id","Date","getTime","requestOptions","method","headers","body","stringify","fetch","then","response","json","console","log","catch","error","state","componentDidMount","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","profileImage","username","postImage","width","style","marginLeft","fontWeight","likes","map","item","index","description","onKeyPress","type","placeholder"],"sources":["/home/divum/Desktop/Training/project/ChattingApp-master/frontend/src/Components/Post/Post.js"],"sourcesContent":["import React,{Component} from \"react\";\nimport './Post.css'\nimport { Avatar } from \"@mui/material\";\n// import postImage from \"../../images/post2.jpg\";\nimport love from \"../../images/love.png\";\nimport comments from \"../../images/comments.png\";\nimport send from \"../../images/send.png\";\n\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            commentList:[]\n        }\n    }\n\n    componentDidMount(){\n        this.getComments();\n    }\n\n    getComments=()=>{\n        let data =[\n            {\n                \"username\": \"aravind\",\n                \"commentId\": \"1234\",\n                \"timeStamp\": \"123456\",\n                \"description\": \"Comment 1\"\n            },\n            {\n                \"username\": \"keeru\",\n                \"commentId\": \"1234\",\n                \"timeStamp\": \"123456\",\n                \"description\": \"Comment 2\"\n            },\n            {\n                \"username\": \"arun\",\n                \"commentId\": \"1234\",\n                \"timeStamp\": \"123456\",\n                \"description\": \"Comment 3\"\n            }\n        ];\n        this.setState({commentList: data});\n        // fetch(\"http://localhost:8080/comments/{id}\")\n        //     .then(response => response.json())\n        //     .then(data => {\n        //         this.setState({commentList: data});\n        //     });\n    }\n\n    submitCommits=(event)=>{\n        if(event.key == \"Enter\"){\n            let comment = event.currentTarget.value;\n            if(comment!=null || comment != undefined){\n                const thisContext = this;\n                let payload = {\n                    \"commentId\": Math.floor(Math.random() * 100000).toString(),\n                    \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n                    \"postId\": this.props.id,\n                    \"comment\": comment,\n                    \"commentedAt\": new Date().getTime(),\n                };\n                \n                const requestOptions ={\n                    method: \"POST\",\n                    headers: { 'Content-Type': 'application/json' },\n                    body : JSON.stringify(payload),\n                }\n    \n                fetch(\"http://localhost:8080/comments\",requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data);\n                    // thisContext.getPost();\n                })\n                .catch(error =>{\n    \n                })\n            }\n        }\n    }\n\n    render() { \n        return (  \n            <div className=\"post_container\">\n                {/* Header */}\n                <div className=\"post_header\">\n                    <Avatar className=\"post_image\" src={this.props.profileImage}/>\n                    <div className=\"post_username\">{this.props.username}</div>\n                </div>\n\n                {/* Image */}\n                <div>\n                    <img src={this.props.postImage} width=\"615px\"/>\n                </div>\n\n                {/* Analytics */}\n                <div>\n                    <div style={{marginLeft:\"10px\"}}>\n                        <img src={love} className=\"post_reactImage\"/>\n                        <img src={comments} className=\"post_reactImage\"/>\n                        <img src={send} className=\"post_reactImage\"/>\n                    </div>\n                    <div style={{fontWeight:\"bold\", marginLeft:\"20px\"}}>\n                        {this.props.likes} likes\n                    </div>\n                </div>\n\n                {/* Comment section */}\n                <div>\n                    {\n                        this.state.commentList.map((item,index)=>(\n                            <div className=\"post_comment\">{item.username}: {item.description}</div>\n                        ))\n                    }\n                    <input className=\"post_commentBox\" onKeyPress={this.submitCommits} type=\"text\" placeholder=\"Add a comment...\" />\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module"}