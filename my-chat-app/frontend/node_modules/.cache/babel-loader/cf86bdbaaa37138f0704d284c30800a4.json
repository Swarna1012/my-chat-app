{"ast":null,"code":"// import React, { createContext, useContext, useState } from 'react';\n\n// export const UserContext = React.createContext();\n\n// export const UserProvider = ({ children }) => {\n//   const [userKey, setUserKey] = useState(()=>{\n//     const localValue = JSON.parse(localStorage.getItem(\"users\"));\n//     return localValue ? localValue : null;\n//   });\n\n//   return (\n//     <UserContext.Provider value={{ userKey, setUserKey }}>\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\n\n// export const useUser = () => {\n//   return useContext(UserContext);\n// };","map":{"version":3,"names":[],"sources":["/home/divum/Desktop/Training/project/ChattingApp-master/frontend/src/context/UserContext.js"],"sourcesContent":["// import React, { createContext, useContext, useState } from 'react';\n\n// export const UserContext = React.createContext();\n\n// export const UserProvider = ({ children }) => {\n//   const [userKey, setUserKey] = useState(()=>{\n//     const localValue = JSON.parse(localStorage.getItem(\"users\"));\n//     return localValue ? localValue : null;\n//   });\n\n//   return (\n//     <UserContext.Provider value={{ userKey, setUserKey }}>\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\n\n// export const useUser = () => {\n//   return useContext(UserContext);\n// };\n\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}